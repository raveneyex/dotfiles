#!/bin/sh

alias powericons="get_icon_names"

# Change to Frontend and activates proper node version.
frontend-location() {
    cd ~/Code/insight-brain/insight-brain-frontend
}

# 1. Build a project with maven.
mvn-build () {
    if [ $# -eq 0 ]; then
        # Skip all tests
        mvn clean install -DskipTests -Dskip-functional-test -Dskip-obfuscate
    elif [ $1 = 'full' ]; then
        # Do the FULL build. Slow.
        mvn clean install
    elif [ $1 = 'tests' ]; then
        # Run the tests but skip obfuscation
        mvn clean install -Dskip-obfuscate
    fi
}

iq-build () {
    cd ~/Code/insight-brain/
    mvn clean install -DskipTests -Dskip-functional-test -Dskip-obfuscate
}

# 2. Runs Insight Service project FROM BUILD
iq-service () {
    cd ~/Code/insight-brain/insight-brain-service
    if [ $# -eq 0 ]; then
        # default invocation. Using `config.yml` from the same execution directory.
        # java -jar target/insight-brain-service-*-SNAPSHOT-server.jar server config.yml
        java -jar target/insight-brain-service-*-SNAPSHOT-server.jar server src/test/resources/config-dev.yml
    elif [ $# -eq 1 ]; then
        # provides an alternative config
        java -jar target/insight-brain-service-*-SNAPSHOT-server.jar server $1
    fi
}

iq-clone () {
    cd ~/Code/insight-clone/insight-brain-service
    java -jar target/insight-brain-service-*-SNAPSHOT-server.jar server src/test/resources/config-dev.yml
}

fe-iq-clone () {
    cd ~/Code/insight-clone/insight-brain-service
    mvn exec:java -Dexec.mainClass=com.sonatype.insight.brain.service.InsightBrainService -Dexec.args='server src/test/resources/config-dev.yml' -Ddw.server.applicationConnectors[0].port=8072
}

# 3. Runs Insight Service project from CODE and changes the port so that the frontend may be run in parallel.
fe-iq-service () {
    cd ~/Code/insight-brain/insight-brain-service
    if [ $# -eq 0 ]; then
        mvn exec:java -Dexec.mainClass=com.sonatype.insight.brain.service.InsightBrainService -Dexec.args='server src/test/resources/config-dev.yml' -Ddw.server.applicationConnectors[0].port=8072
    elif [ $# -eq 1 ]; then
        mvn exec:java -Dexec.mainClass=com.sonatype.insight.brain.service.InsightBrainService -Dexec.args='server src/test/resources/config-dev.yml' -Ddw.server.applicationConnectors[0].port=$1
    fi
}

# 4. Runs the Front-End application
fe-dev () {
    frontend-location
    grunt
}

# 5. Runs the Front-End *unit* tests.
fe-tests () {
    #node_dev
    frontend-location
    if [ $# -eq 0 ]; then
        grunt bdd
    elif [ $1 = 'legacy' ]; then
        mvn jasmine:bdd -Ptest-cip
    fi
}

# 6. Runs the Functional Tests
iq-tests () {
    if [ $# -eq 0 ]; then
        mvn clean verify -f insight-brain-java-functional-test -Dwebdriver.chrome.driver=/usr/local/bin/chromedriver
    elif [ $# -eq 1 ]; then
        mvn clean verify -f insight-brain-java-functional-test -Dwebdriver.chrome.driver=/usr/local/bin/chromedriver -Dit.test=$1
    fi
}

ff-iq-tests () {
    if [ $# -eq 0 ]; then
        mvn clean verify -f insight-brain-java-functional-test -Dbrowser=firefox
    elif [ $# -eq 1 ]; then
        mvn clean verify -f insight-brain-java-functional-test -Dbrowser=firefox -Dit.test=$1
    fi
}

# Get the actual computed pom
project-pom () {
    mvn help:effective-pom
}

# Run Chaos Report
chaos-report () {
    cd ~/Code/chaos-report/insight-portal-webapp
    java -Dds.config=target/test-classes/config-dev.properties -jar target/ds-web-worker.jar server src/test/resources/config-dev.yml
}

chaos-report-dev () {
    cd ~/Code/chaos-report/insight-portal-webapp
	mvn exec:java -Dexec.mainClass="com.sonatype.insight.portal.rest.service.DsWebWorker" -Dds.config=target/test-classes/config-dev.properties -Djavaagent://Users/raveneyex/.m2/repository/org/apache/openjpa/openjpa/3.1.0/openjpa-3.1.0.jar -Dexec.args="server src/test/resources/config-dev.yml" -Dhazelcast.config=target/test-classes/hazelcast.xml 
}

# Runs Zap Proxy
zap () {
    sh /Users/raveneyex/Tools/ZAP_2.7.0/zap.sh
}

# Runs nexus.
nexus() {
    cd /opt/nexus-3.14.0-04/nexus-3.14.0-04/bin
    if [ $# -eq 0 ]; then
        ./nexus start
    elif [ $# -eq 1 ]; then
        ./nexus $1
    fi
}

alias hds="chaos-report"

ayperos() {
    cd ~/Code/prediction-bot/
    npm start
}

get-SNAPSHOT-dependencies() {
    mvn dependency:tree -Dincludes=:::*-SNAPSHOT -Dexcludes='${project.groupId}'
}

brain() {
    cd ~/Code/insight-brain/
}

bversion() {
    npm version --no-git-tag-version $1
}

rsc-build() {
    cd ~/Code/react-shared-components
    npm run build
}

rsc-gallery() {
    cd ~/Code/react-shared-components/gallery
    rm -rf node_modules && npm i && npm start
}
